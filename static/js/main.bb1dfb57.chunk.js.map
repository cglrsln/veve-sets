{"version":3,"sources":["SetTable.js","App.js","reportWebVitals.js","index.js"],"names":["SetTable","useState","sets","setSets","useEffect","axios","get","then","response","data","catch","error","console","log","sort","a","b","season","name","total","rows","map","item","index","formattedTotal","Intl","NumberFormat","style","currency","format","collectibles","length","Table","striped","bordered","hover","App","Container","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAyDeA,MArDf,WAAqB,IAAD,EACKC,mBAAS,IADd,mBACZC,EADY,KACNC,EADM,KAGlBC,qBAAU,WAERC,IAAMC,IADE,0DAELC,MAAK,SAAAC,GACJL,EAAQK,EAASC,SAElBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,SAIlBT,EAAKY,MAAK,SAACC,EAAGC,GACZ,OAAID,EAAEE,OAASD,EAAEC,QAAkB,EAC/BF,EAAEE,OAASD,EAAEC,OAAiB,EAC9BF,EAAEG,KAAOF,EAAEE,MAAgB,EAC3BH,EAAEG,KAAOF,EAAEE,KAAe,EACvBF,EAAEG,MAAQJ,EAAEI,SAGrB,IAAMC,EAAOlB,EAAKmB,KAAI,SAACC,EAAMC,GAC3B,IAAMC,EAAiB,IAAIC,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAC5DC,OAAOP,EAAKH,OAErC,OACE,+BACE,6BAAKG,EAAKJ,OACV,6BAAKI,EAAKL,SACV,6BAAKK,EAAKQ,aAAaC,SACvB,6BAAKP,MAJED,MASb,OACE,eAACS,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,qCACA,wCACA,mDACA,4CAGJ,gCACGf,Q,QCpCMgB,MARf,WACE,OACE,cAACC,EAAA,EAAD,CAAWC,UAAU,MAArB,SACE,cAAC,EAAD,OCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bb1dfb57.chunk.js","sourcesContent":["import axios from 'axios';\nimport { useState, useEffect} from 'react';\nimport Table from 'react-bootstrap/Table';\n\nfunction SetTable() {\n const [sets, setSets] = useState([])\n\n  useEffect(() => {\n    let path = `https://cmar.github.io/veve-price-scraper/current.json`\n    axios.get(path)\n      .then(response => {\n        setSets(response.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  })\n\n  sets.sort((a, b) => {\n    if (a.season < b.season) { return -1 }\n    if (a.season > b.season) { return 1 }\n    if (a.name < b.name) { return -1 }\n    if (a.name > b.name) { return 1 }\n    return b.total - a.total\n  })\n\n  const rows = sets.map((item, index) => {\n    const formattedTotal = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' })\n                            .format(item.total);\n\n    return(\n      <tr key={index}>\n        <td>{item.name}</td>\n        <td>{item.season}</td>\n        <td>{item.collectibles.length}</td>\n        <td>{formattedTotal}</td>\n      </tr>\n    )\n  })\n\n  return(\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th>Set</th>\n          <th>Season</th>\n          <th># of Collectibles</th>\n          <th>Price</th>\n        </tr>\n      </thead>\n      <tbody>\n        {rows}\n      </tbody>\n    </Table>\n  )\n}\n\nexport default SetTable\n","import './App.css';\nimport SetTable from './SetTable';\nimport { useState, useEffect} from 'react';\n\nimport Container from 'react-bootstrap/Container';\n\n\nfunction App() {\n  return (\n    <Container className=\"p-3\">\n      <SetTable/>\n    </Container>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}