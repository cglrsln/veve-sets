{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","sets","setSets","useEffect","axios","get","then","response","data","catch","error","console","log","sort","a","b","total","rows","map","item","index","name","season","collectibles","length","toFixed","Container","className","Table","striped","bordered","hover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAuDeA,MA/Cf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,KAGbC,qBAAU,WAERC,IAAMC,IADE,gBAELC,MAAK,SAAAC,GACJL,EAAQK,EAASC,SAElBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,SAKlBT,EAAKY,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,MAAQF,EAAEE,SAEhC,IAAMC,EAAOhB,EAAKiB,KAAI,SAACC,EAAMC,GAC3B,OACE,+BACE,6BAAKD,EAAKE,OACV,6BAAKF,EAAKG,SACV,6BAAKH,EAAKI,aAAaC,SACvB,mCAAML,EAAKH,MAAMS,QAAQ,QAJlBL,MASb,OACE,cAACM,EAAA,EAAD,CAAWC,UAAU,MAArB,SACE,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,qCACA,wCACA,mDACA,4CAGJ,gCACGd,UCpCIe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.66eb3729.chunk.js","sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport { useState, useEffect} from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Table from 'react-bootstrap/Table';\n\nfunction App() {\n  const [sets, setSets] = useState([])\n\n  useEffect(() => {\n    let path = `current.json`\n    axios.get(path)\n      .then(response => {\n        setSets(response.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  })\n\n\n  sets.sort((a, b) => b.total - a.total)\n\n  const rows = sets.map((item, index) => {\n    return(\n      <tr key={index}>\n        <td>{item.name}</td>\n        <td>{item.season}</td>\n        <td>{item.collectibles.length}</td>\n        <td>${item.total.toFixed(2)}</td>\n      </tr>\n    )\n  })\n\n  return (\n    <Container className=\"p-3\">\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Set</th>\n            <th>Season</th>\n            <th># of Collectibles</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows}\n        </tbody>\n      </Table>\n    </Container>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}